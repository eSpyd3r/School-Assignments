Lecture 1:
    ☐ Internet exists as a network -> overcrowding = using bandwidth = slower

Lecture 2 - How data moves:
    ☐ Webpage sent in components, each with components that are broken into a set of packets
    ☐ Missing packets -> reciever waits; waiting = Timeout period
      ☐ Will eventually fully Timeout, quitting/stopping the wait -> data/packets that are needed aren't coming through after a certain amount of time; the collected packets are thrown out and an error is thrown
      ☐ Sends request for missing packet
    ☐ TCP Routing -> typical protocol for routing, guarenteeing that the requeted data is transferred
      ☐ Used for transferring of data that need to be delivered 'perfectly' (loading a website/image, since the entire website/image is needed)
    ☐ Sometimes it's 'okay' for data to be loss
      ☐ video games -> crashing a game over a single loss packet wouldn't make sense
      ☐ youtube/playback -> typically located as buffer anyways (in the future), and so if any packets are lost there's time to recieve it
    ☐ UDP Routing -> Not guarenteed, real-time
      ☐ Only concerned about the latest packet in the stream. If an older packet is recieved, it's thrown out
      ☐ This is when it's 'okay' to have packet loss (note that in scenarios like video games, some assets are considered optional (delivered with DCP) while others are considered required (TCP))

Lecutre 3 - How do we "chop-up" packets:
  ☐ Binary/Decimal representation


Lecture 7:
    ☐ Recall IPv4 -> X.Y.Z.W s.t. X, Y, Z, and W each represent 1 byte (8bits)
      ☐ 8 x 4 = 32 bits
      ☐ 2 ^ 32 different addresses
    ☐ Regions of the world are separated into different address spaces among the IPv4 possibilities
      ☐ North American devices start with a certain X, Europe has a different set of Xs, etc.
    ☐ 2^32 ~ 4 billion
      ☐ Not that many, considering there are about 6 billion people
    ☐ IP address "crunch" -> running out of IP addresses
    ☐ Routers serve as mediums -> they represent a "public IP address" of a LAN
      ☐ Device -> Router -> Internet
      ☐ Private device IP address is translated by the router to a public IP address
      ☐ Router knows which device sends a request, and once a callback is recieved, the router knows which device made the initial request to relay the callback
      ☐ Since private device IPs are specific to routers, 2 devices in 2 separate LANs can have the same private device IP as long as they are connected to different routers
      ☐ Helps to solve the problem of "running out of IP addresses"
   ☐ On each device, individual (separate tabs, for example) operations that communicate with the internet are each given their own "Port"
     ☐ That way, packets are sent to IPs (of the device) with a port (of the operation, for the device to interpret)

Lecture 8 //Last Lecture for Exam 2:
  ☐ When reaching out to webservers, the default destination port is 80 (universal agreement)
    ☐ From source to destination, the source wants to send the request to destinationIP:80
      ☐ Since it is assigned port 80, webservers are considered their own operations
      ☐ This is the case for ALL webservers/hosts (google, mcgill, etc.)
  ☐ Doing so establishes a unique "communication strip" between 2 distinct IPs with ports (A device with a specific operation sends a request to a webserver with a specific port 80)
  ☐ Laptop -> Router(NAT: Network Address Translator) -> "Internet" -> Webserver
    ☐ Laptop part of a LAN
    ☐ Outgoing:
      ☐ Source IP: Laptop/DeviceIP:OperationPort
      ☐ DestinationIP: webserverIP:80
    ☐ Router(NAT): sends packet on behalf of the LAN device
      ☐ New Source IP: RouterIP:RandomizedUnusedPort
      ☐ The RandomizedUnusedPort is a mapping from (Laptop/DeviceIP:OperationPort) -> (RandomizedUnusedPort)
        ☐ Network Address Translation (NAT) Table
      ☐ DestinationIP: WebserverIP:80
    ☐ Webserver recieves packet, then sends a callback to RouterIP:RandomizedUnusedPort, which is then translated back to Laptop/DeviceIP:OperationPort
    ☐ That is, the Incoming Packet Flow is:
      ☐ Source: WebserverIP:80
      ☐ Destination: RouterIP:RandomizedUnusedPort
      ☐ ...then is converted to...
      ☐ Source: WebserverIP:80
      ☐ Destination: Laptop/DeviceIP:OperationPort
    ☐ "Leaving a LAN: Change Source + Update Table (perform translation)", "Entering a LAN: Change Destination"
  ☐ //IPs are labeled in the LANs that interpret it
    ☐ For example, a computer connected to a router:
      ☐ the computer's IP is written within the LAN of the router, not just in the LAN of the computer
  ☐ Each NAT has its own table

Lecture 9:
  ☐ IPv6 -> 128 bit address vs. IPv4 -> 32 bit address
  ☐ Virtual Machine (VM) -> software program that is emulating hardware (multiple computers for example)
  ☐ Large Data Centers have servers which run VMs; corporations can rent these servers to host their websites
    ☐ Important for providing secure connections to specific geographic locations
    ☐ VMs act as individual computers that each talk to the internet
  ☐ Larger corporations will have their own data centers that may/may not be for rent (Apple uses their own for themselves)
  ☐ Using VPNs:
    ☐ In order to send a packet to a private destination (can't be reached without VPN), send a packet "package" to the VPN server (the destination IP of the packet is no longer the private IP; instead, the destination is the IP of the VPN server)
    ☐ VPN servers behave as a medium AND a NAT
    ☐ That is:
      ☐ Home computer (S: device, D: VPN Server of Private Network) -> VPN Server (S: VPN Server, D: Private IP in Private Network)
    ☐ Note: VPN has 2 IP addresses -> 1 "public" IP for the outside devices to connect to, and 1 "private" IP which is for its internal use within its private network (this is only visible to those within the same LAN)


















 