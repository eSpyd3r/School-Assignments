Strategy:
  // Strategy Interface
public interface SortingStrategy {
    void sort(List<Integer> data);
}

// Concrete Strategies
public class QuickSort implements SortingStrategy {
    public void sort(List<Integer> data) {
        // Implement quicksort here
    }
}

public class BubbleSort implements SortingStrategy {
    public void sort(List<Integer> data) {
        // Implement bubble sort here
    }
}

// Context
public class Sorter {
    private SortingStrategy strategy;

    public Sorter(SortingStrategy strategy) {
        this.strategy = strategy;
    }

    public void sortData(List<Integer> data) {
        strategy.sort(data);
    }

    public void setStrategy(SortingStrategy strategy) {
        this.strategy = strategy;
    }
}

// Client code
List<Integer> data = Arrays.asList(3, 1, 4, 1, 5, 9);
Sorter sorter = new Sorter(new QuickSort()); // Initially using QuickSort
sorter.sortData(data);

sorter.setStrategy(new BubbleSort()); // Changing strategy to BubbleSort
sorter.sortData(data);
